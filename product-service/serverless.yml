service: product-service

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-west-1

  environment:
    CREATE_PRODUCT_TOPIC_ARN:
      Ref: createProductTopic

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/*"
    - Effect: "Allow"
      Action: "sqs:*"
      Resource:
        - Fn::ImportValue: CatalogItemsQueueArnId
    - Effect: "Allow"
      Action: "sns:*"
      Resource:
        Ref: createProductTopic

custom:
  webpack:
    webpackConfig: "webpack.config.js"
  autoswagger:
    apiType: "http"
    basePath: /${opt:stage, "dev"}
    typefiles:
      - "src/shared/types.ts"

plugins:
  - serverless-auto-swagger
  - serverless-offline
  - serverless-webpack

functions:
  createProduct:
    handler: src/functions/createProduct/createProduct.handler
    events:
      - http:
          method: POST
          path: /products
          cors: true
  getProductsList:
    handler: src/functions/getProductsList/getProductsList.handler
    events:
      - http:
          method: GET
          path: /products
          cors: true
  getProductById:
    handler: src/functions/getProductById/getProductById.handler
    events:
      - http:
          method: GET
          path: /products/{id}
          cors: true
          request:
            parameters:
              paths:
                id: true

  catalogBatchProcess:
    handler: src/functions/catalogBatchProcess/catalogBatchProcess.handler
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::ImportValue: CatalogItemsQueueArnId

resources:
  Resources:
    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    createProductSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: vitshacov@gmail.com
        Protocol: email
        TopicArn:
          Ref: createProductTopic

    productsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: productsTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    stocksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: stocksTable
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
